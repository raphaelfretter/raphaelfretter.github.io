{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","select","this","setState","className","fixed","React","Component","AppWrapper","Menu","Navbar","bg","variant","style","minWidth","width","margin","textAlign","borderRadius","Brand","backgroundColor","color","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,0ECoCTA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,OAAQ,SAJO,E,8CAQnB,WACEC,KAAKC,UAAS,SAACH,GACb,MAAO,CACLC,OAAQD,EAAMC,a,oBAKpB,WACE,OACE,sBAAKG,UAAU,aAAf,UACI,cAAC,EAAD,CAAMC,MAAM,QACZ,cAAC,EAAD,W,GArBQC,IAAMC,WA2BlBC,E,kDACJ,WAAYT,GAAQ,uCACZA,G,0CAGR,WACE,OACE,6B,GAPmBO,IAAMC,WAYzBE,E,kDACJ,WAAYV,GAAQ,uCACZA,G,0CAER,WACE,OACE,8BACE,eAACW,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,MAAO,CAACC,SAAU,QAASC,MAAO,MAAOC,OAAQ,cAAeC,UAAW,SAAUC,aAAc,IAAtI,UACE,cAACR,EAAA,EAAOS,MAAR,CAAcN,MAAO,CAACK,aAAc,GAAIE,gBAAiB,QAASC,MAAO,mBAAoBC,KAAK,QAAlG,yCACA,cAACZ,EAAA,EAAOa,OAAR,CAAeC,gBAAc,0BAC7B,eAACd,EAAA,EAAOe,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKvB,UAAU,UAAf,UACE,cAACuB,EAAA,EAAIC,KAAL,CAAUN,KAAK,QAAf,kBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,UAAf,oBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,0BAAjC,UACE,cAACG,EAAA,EAAYE,KAAb,CAAkBT,KAAK,WAAvB,8BACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,kDAAvB,2BACA,cAACO,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,gBAAvB,uBAGJ,eAACW,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACE,cAACC,EAAA,EAAD,CAAatB,MAAO,CAACK,aAAc,IAAKkB,KAAK,OAAOC,YAAY,SAASjC,UAAU,YACnF,cAACkC,EAAA,EAAD,CAAQlC,UAAU,cAAcQ,QAAQ,eAAxC,mC,GAvBKN,IAAMC,WA0CVT,QCzGAyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK9C,UAAU,UAEjB+C,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b07227f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport reactDom from 'react-dom';\nimport React from 'react';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport { \n  Navbar, \n  Nav, \n  Form, \n  FormControl, \n  Button, \n  NavDropdown,\n  Card \n} from 'react-bootstrap';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      select: '#home'\n    }\n  }\n\n  changePage() {\n    this.setState((state) => {\n      return {\n        select: state.select\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n          <Menu fixed=\"top\" />\n          <AppWrapper/>\n      </div>\n    );\n  }\n}\n\nclass AppWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <body></body>\n    );\n  }\n}\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"white\" variant=\"light\" style={{minWidth: '875px', width: '50%', margin: '0 25% 0 25%', textAlign: 'center', borderRadius: 30}}>\n          <Navbar.Brand style={{borderRadius: 30, backgroundColor: 'white', color: 'rgba(0,0,0,0.5)'}} href=\"#home\">Raphael Fretter - Portfolio</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/home\">Home</Nav.Link>\n              <Nav.Link href=\"/resume\">Resume</Nav.Link>\n              <NavDropdown title=\"Projects\" id=\"navbarScrollingDropdown\">\n                <NavDropdown.Item href=\"/tttgame\">Tic-Tac-Toe Game</NavDropdown.Item>\n                <NavDropdown.Item href=\"https://raphaelfretter.github.io/quote-machine/\">Quote Machine</NavDropdown.Item>\n                <NavDropdown.Divider/>\n                <NavDropdown.Item href=\"#all-projects\">All</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline>\n              <FormControl style={{borderRadius: 30}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button className=\"Menu-button\" variant=\"outline-info\">Search</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nfunction Home() {\n  return (\n    <div>\n      <Card>\n        <Card.Text>Hello there</Card.Text>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"App\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}